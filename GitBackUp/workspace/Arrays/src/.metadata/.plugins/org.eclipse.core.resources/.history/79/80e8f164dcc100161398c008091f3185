//import BinaryTree.Node;


public class BT {
	int data;
	BT left;
	BT right;
	
	BT root;
	
	//constructor
	public BT(int data){
		this.data = data;
//		this.left = null;
//		this.right = null;
	}

	public BT() {
		// TODO Auto-generated constructor stub
	}

	public int getData() {
		return data;
	}

	public void setData(int data) {
		this.data = data;
	}

	public BT getLeft() {
		return left;
	}

	public void setLeft(BT left) {
		this.left = left;
	}

	public BT getRight() {
		return right;
	}

	public void setRight(BT right) {
		this.right = right;
	}
	
	void insert(int data){
		if(root == null)
			root = new BT(data);
		else
			root = insert(root,data);	
			//return;
	}
	
	public BT insert(BT node,int data){
		
		if (node==null) { 
			node = new BT(data); 
		} 
		else { 
			if (data <= node.data) { 
				node.left = insert(node.left, data); 
			} 
			else { 
				node.right = insert(node.right, data); 
			} 
		}
		//System.out.println("Root is "+ root.data);
		return node; // in any case, return the new pointer to the caller 
		
	}
	
	public void print(){
		 preOrder(root);
	}
	public void preOrder(BT root){
		if(root !=null){
			System.out.println(root.data);
			System.out.println();
			
			preOrder(root.left);
			preOrder(root.right);
		}
	}
	
//	BT insert(BT node,int data){
//	
//		if(node ==null)
//			node = new BT(data);
//		
//		if(node.left ==null){
//			node.left = insert(node.left,data);
//		}else{
//			insert(node.left,data);
//		}
//		
//		if(root.right ==null){
//			root.right = new BT(data);
//		}else{
//			insert(root.right,data);
//		}
//		
//		return root;
//	}
	
//	void insert(int data){
//		root = insert(root,data);
//			//return;
//	}
	public static void main (String args[]){
		BT tree = new BT();
		
		tree.insert(1);
		tree.insert(2);
		tree.insert(3);
		tree.insert(4);
		tree.insert(5);
		tree.insert(6);
		tree.insert(7);
	
		
		tree.print();
		
	}
}
